[{"/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/EnterForm/EnterForm.js":"1","/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/AppBar/AppBarNav/AppBarNav.js":"2","/home/xride/Рабочий стол/ProjectX/app-xyz/src/index.js":"3","/home/xride/Рабочий стол/ProjectX/app-xyz/src/redux/actions/authActions.js":"4","/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/EnterForm/Entry/Entry.js":"5","/home/xride/Рабочий стол/ProjectX/app-xyz/src/redux/reducers/personalAreaReducer.js":"6","/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/EnterForm/RegistrationForm/RegistrationFrom.js":"7","/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/Button/Button.jsx":"8","/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/PersonalArea/PersonalArea.js":"9","/home/xride/Рабочий стол/ProjectX/app-xyz/src/App.js":"10","/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/AppBar/AppBar.js":"11","/home/xride/Рабочий стол/ProjectX/app-xyz/src/WorkClass/CommonClass.js":"12","/home/xride/Рабочий стол/ProjectX/app-xyz/src/redux/actions/personalAreaActions.js":"13","/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/EnterForm/ForgotPass/ForgotPass.js":"14","/home/xride/Рабочий стол/ProjectX/app-xyz/src/redux/store.js":"15","/home/xride/Рабочий стол/ProjectX/app-xyz/src/redux/reducers/enterFormReducer.js":"16"},{"size":1832,"mtime":1618661177381,"results":"17","hashOfConfig":"18"},{"size":275,"mtime":1613821181959,"results":"19","hashOfConfig":"18"},{"size":502,"mtime":1618650399627,"results":"20","hashOfConfig":"18"},{"size":624,"mtime":1618669683544,"results":"21","hashOfConfig":"22"},{"size":5586,"mtime":1618759178195,"results":"23","hashOfConfig":"18"},{"size":6728,"mtime":1619355825417,"results":"24","hashOfConfig":"18"},{"size":7177,"mtime":1617817417971,"results":"25","hashOfConfig":"18"},{"size":727,"mtime":1618661778534,"results":"26","hashOfConfig":"18"},{"size":8845,"mtime":1619355992932,"results":"27","hashOfConfig":"18"},{"size":1833,"mtime":1619367490463,"results":"28","hashOfConfig":"22"},{"size":2137,"mtime":1619367055972,"results":"29","hashOfConfig":"18"},{"size":5239,"mtime":1619342450960,"results":"30","hashOfConfig":"18"},{"size":985,"mtime":1619356008476,"results":"31","hashOfConfig":"18"},{"size":3571,"mtime":1617817403404,"results":"32","hashOfConfig":"18"},{"size":430,"mtime":1617630287280,"results":"33","hashOfConfig":"18"},{"size":2087,"mtime":1618661961930,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"10qm1c0",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"62b4wy",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},"/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/EnterForm/EnterForm.js",["78","79"],"import React, { Component } from 'react';\r\nimport ForgotPass from './ForgotPass/ForgotPass';\r\nimport RegistrationFrom from './RegistrationForm/RegistrationFrom';\r\nimport './enterFromStyle.css';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport Entry from './Entry/Entry';\r\nimport CommonClass from '../../WorkClass/CommonClass';\r\nconst CC = new CommonClass();\r\n\r\nexport default class EnterForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props.history);\r\n\r\n        this.closeEntry = this.closeEntry.bind(this);\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch({type: 'OPEN_ENTER_FORM'});          \r\n    }\r\n\r\n    closeEntry(e) {\r\n        if (!e.target.closest('.enter__form')) \r\n            this.props.dispatch({type: 'CLOSE_ENTER_FORM', history: this.props.history.history}); \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"enter__wrap\" onClick={this.closeEntry}>\r\n                <form className=\"enter__form\">\r\n                    <Route exact path=\"/entry\" \r\n                        render={ () => <Entry  mainClass='enter__form-container' \r\n                                            dispatch={this.props.dispatch}\r\n                                            state={this.props.state}\r\n                                            history={this.props.history.history}\r\n                                            />} />\r\n                    <Route exact path=\"/entry/forgot_pass\" render={ () => <ForgotPass mainClass='enter__form-container'/>} />\r\n                    <Route exact path=\"/entry/registration\" render={ () => <RegistrationFrom mainClass='enter__form-container'/>} />                    \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/AppBar/AppBarNav/AppBarNav.js",[],"/home/xride/Рабочий стол/ProjectX/app-xyz/src/index.js",[],["80","81"],"/home/xride/Рабочий стол/ProjectX/app-xyz/src/redux/actions/authActions.js",[],"/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/EnterForm/Entry/Entry.js",["82","83"],"import React, { Component } from 'react';\nimport Button from '../../Button/Button';\nimport './entryStyle.css';\nimport CommonClass from '../../../WorkClass/CommonClass';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport {sendEnterFormEnd, \n        sendEnterFormStart,\n        authChangeLogin,\n        personalAreaSetStartValue} from '../../../redux/actions/authActions';\nconst CC = new CommonClass();\n\nexport default class Entry extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChangeEmail = this.handleChangeEmail.bind(this);\n        this.handleChangePass = this.handleChangePass.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.sendEnter = this.sendEnter.bind(this);\n    }\n\n    componentDidMount() {\n               \n    }\n\n    handleChangeEmail(event) {\n        this.props.dispatch({\n            type: 'CHANGE_ENTER_FORM_EMAIL',\n            newData: event.target.value\n        });\n    }\n    handleChangePass(event) {\n        this.props.dispatch({\n            type: 'CHANGE_ENTER_FORM_PASS',\n            newData: event.target.value\n        });\n    }\n\n    async handleClick(event) {\n        console.log(this.props.state);\n        this.props.dispatch(sendEnterFormStart());\n        const resp = await CC.request('/api/auth', 'POST', this.props.state);\n        console.log(resp);\n        this.props.dispatch(sendEnterFormEnd(resp, this.props.history, 1));\n        this.props.dispatch(personalAreaSetStartValue(resp));\n        \n        setTimeout(() => {\n            this.props.dispatch(sendEnterFormEnd(resp, this.props.history, 2));\n            this.props.dispatch(authChangeLogin(resp));\n        }, resp.success ? 1500 : 1000);\n        \n        // if (resp.success) {\n\n        //     document.querySelector('.enter__form-container').style.display = \"none\";\n        //     document.querySelector('.enter__form .success__auth').style.display = \"block\";\n        //     let cut_data = {\n        //         login: resp.data.login,\n        //         email: resp.data.email,\n        //         id: resp.data.id\n        //     };\n        //     setTimeout(() => {\n        //         document.querySelector('.personal__wrap .change__data').value = JSON.stringify(cut_data);\n        //         document.querySelector('.personal__wrap .change__data').dataset.prevValue = JSON.stringify(cut_data);\n        //         document.querySelector('.personal__wrap .change__data').dispatchEvent(new InputEvent('change'));\n        //         \n        //     }, 1500);\n        // } else {\n        //     document.querySelector('.enter__form .error__auth').style.opacity = \"1\";\n        //     CC.errorEl(document.querySelector('.enter__form-container .enter__email input'));\n        //     CC.errorEl(document.querySelector('.enter__form-container .enter__password input'));\n        //     CC.errorEl(document.querySelector('.enter__form-container .enter__btn'));\n        //     setTimeout(() => {\n        //         document.querySelector('.enter__form .error__auth').style.opacity = \"0\";\n        //     }, 1000);\n        // }\n    }\n\n    sendEnter(e) {\n        if (e.key == 'Enter') {\n            console.log(e.key);\n            this.handleClick({});\n        }\n    }\n\n    render() {\n        let enter_visible = '', success_visible = ' hidden ';\n        if (this.props.state.success_auth) {\n            enter_visible = ' hidden ';\n            success_visible = '';\n        }\n        let error_text_visible = this.props.state.error_auth ? ' visible ' : '',\n            err_block = this.props.state.error_auth ? 'error' : '';\n\n        let loader_visible = this.props.state.loader ? '' : ' hidden ';\n        return (\n            <div>\n                <div className={\"success__auth \" + success_visible}>Вы вошли!</div>\n                <div className={\"loader \" + loader_visible}></div>\n                    <div className={\"enter__form-container \" + enter_visible}\n                        onKeyDown={this.sendEnter}>\n                        <div className={\"error__auth \" + error_text_visible}>Неверный E-mail или пароль</div>                        \n                        <div className=\"enter__email\">\n                            <label>E-mail:</label>\n                            <input type=\"text\" data-id=\"email\" className={\"input__field \" + err_block}\n                                value={this.props.state.email}\n                                onChange = {this.handleChangeEmail}\n                            />\n                        </div>\n                        <div className=\"enter__password\">\n                            <label>Пароль:</label>\n                            <input type=\"password\" data-id=\"password\" name=\"password\" className={\"input__field \" + err_block}\n                                value={this.props.state.password}\n                                onChange = {this.handleChangePass}\n                            />\n                        </div>\n\n                        <Button text=\"Войти\" type=\"enter_btn\" handler={this.handleClick} err={err_block}/>\n                        \n                        <div className = \"enter__other\">\n                            <NavLink to=\"/entry/registration\" className=\"other__registration\">Регистрация</NavLink>\n                            <NavLink to=\"/entry/forgot_pass\" className=\"other__forgot-pass\">Забыли пароль?</NavLink>\n                        </div>\n                    </div>  \n\n            </div>\n        )\n    }\n}",["84","85"],"/home/xride/Рабочий стол/ProjectX/app-xyz/src/redux/reducers/personalAreaReducer.js",["86","87","88","89","90","91","92","93","94","95","96","97","98","99","100"],"import CommonClass from '../../WorkClass/CommonClass';\nconst CC = new CommonClass();\n// PA - Personal Area\nconst PA_SET_START_VALUE = 'PA_SET_START_VALUE';\nconst OPEN_PA = 'OPEN_PA';\nconst CLOSE_PA = 'CLOSE_PA';\nconst CHANGE_BLOCK_INPUT = 'CHANGE_BLOCK_INPUT';\nconst CHANGE_SAVE_BLOCK = 'CHANGE_SAVE_BLOCK';\nconst BACK_TO_PREV_EMAIL = 'BACK_TO_PREV_EMAIL';\nconst CHANGE_USER_DATA_SUCCESS = 'CHANGE_USER_DATA_SUCCESS';\nconst CHANGE_USER_DATA_ERROR = 'CHANGE_USER_DATA_ERROR';\nconst CHANGE_USER_DATA_ERROR_EMAIL = 'CHANGE_USER_DATA_ERROR_EMAIL';\nconst CHANGE_USER_DATA_ERROR_PASSWORD = 'CHANGE_USER_DATA_ERROR_PASSWORD';\n\n\nlet  initialState = {\n    pre_visible: true,\n    visible: true,\n    prev_value : {\n        login: '',\n        email: '',\n    },\n    current_value: {\n        login: '',\n        email: '',\n        valid_email: true,\n        valid_email_class: '',\n        valid_email_text: 'Неверный E-mail',\n        password: '',\n        repeat_password: '',\n        valid_password: false,\n        valid_password_class: '',\n        valid_password_text: '' \n    },\n    save_block: {\n        disable: true,\n        old_password: '',\n        error_password_class: '', \n        save_btn_text: 'Сохранить изменения',\n        save_btn_class: ''\n    }\n};\n\nconst personalAreaReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case PA_SET_START_VALUE:\n            if (!action.resp.success) return state;\n            let resp = action.resp.data;\n            return Object.assign({}, state, {\n                prev_value : {\n                    login: resp.login,\n                    email: resp.email,\n                },\n                current_value: {\n                    login: resp.login,\n                    email: resp.email,\n                    valid_email: true,\n                    valid_email_class: '',\n                    valid_email_text: 'Неверный E-mail',\n                    password: '',\n                    repeat_password: '',\n                    valid_password: false,\n                    valid_password_class: '',\n                    valid_password_text: '' \n                }\n            });\n        case OPEN_PA:\n            if (action.stage == 1)\n                state.pre_visible = true;\n            else if (action.stage == 2)\n                state.visible = true;\n                console.log(state);\n            return state;\n        case CLOSE_PA:\n            state.visible = false;\n            return state;\n        case CHANGE_BLOCK_INPUT:\n            state.current_value[action.field] = action.data;\n            let current =  {\n                login : state.current_value.login,\n                email : state.current_value.email,\n                password : state.current_value.password,\n                repeat_password : state.current_value.repeat_password,\n                valid_password : state.current_value.valid_password\n            },\n            prev = {\n                login : state.prev_value.login,\n                email : state.prev_value.email\n            };\n            if (action.field == 'password') {\n                let check = CC.checkPassValid(current.password);\n                state.current_value.valid_password_class = check.notice_class;\n                state.current_value.valid_password_text = check.notice_text;\n                state.current_value.valid_password = check.valid_pass;\n            }\n\n            if (action.field == 'email') {\n                state.current_value.valid_email_class = CC.validateEmail(current.email) ? '' : ' active ';\n            }\n\n            if (((current.login !== prev.login && current.login != '')\n                || (current.email !== prev.email && current.email != ''))\n                && ((current.password === current.repeat_password && current.valid_password) \n                || (current.password == '' && current.repeat_password == '')))\n                state.save_block.disable = false;\n            else state.save_block.disable = true;\n            \n            return state;\n        case CHANGE_SAVE_BLOCK:\n            state.save_block[action.field] = action.data;\n            state.save_block.error_password_class = '';\n            return state;\n        case BACK_TO_PREV_EMAIL:\n            state.current_value.email = state.prev_value.email;\n            state.current_value.valid_email = true;\n            return state;\n        case CHANGE_USER_DATA_SUCCESS:\n            if (action.stage == 1) {\n                state.prev_value.login = state.current_value.login;\n                state.prev_value.email = state.current_value.email;\n                state.current_value.password = '';\n                state.current_value.repeat_password = '';\n                state.current_value.valid_password_class = '';\n                state.current_value.valid_password_text = '';\n                state.current_value.valid_password = false;\n                state.save_block.save_btn_class = ' success ';\n                state.save_block.save_btn_text = 'Сохранено';\n            } else if (action.stage == 2) {\n                state.save_block.old_password = '';\n                state.save_block.disable = true;\n                state.save_block.save_btn_class = '';\n                state.save_block.save_btn_text = 'Сохранить изменения';\n            }\n            return state;\n        case CHANGE_USER_DATA_ERROR:\n            if (action.stage == 1) {\n                state.save_block.save_btn_class = ' error ';\n                state.save_block.save_btn_text = 'Не удалось обновить данные';\n            } else if (action.stage == 2) {\n                state.save_block.save_btn_class = '';\n                state.save_block.save_btn_text = 'Сохранить изменения';\n            }\n            return state;\n        case CHANGE_USER_DATA_ERROR_EMAIL:\n            if (action.stage == 1) {\n                state.current_value.valid_email = false;\n                state.current_value.valid_email_class = ' active ';\n                state.current_value.valid_email_text = 'Данный E-mail занят';\n            } else if (action.stage == 2) {\n                state.current_value.valid_email_class = '';\n            } else if (action.stage == 3) {\n                state.current_value.valid_email = true;\n                state.current_value.email = state.prev_value.email;\n                state.current_value.valid_email_text = 'Неверный E-mail';\n            }\n            return state;\n        case CHANGE_USER_DATA_ERROR_PASSWORD:\n            state.save_block.error_password_class = ' error ';\n            return state;\n        default:\n            return state;\n    }\n\n};\n\nexport default personalAreaReducer;","/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/EnterForm/RegistrationForm/RegistrationFrom.js",["101","102"],"import React, { Component } from 'react';\r\nimport './RegistrationFromStyle.css';\r\nimport CommonClass from '../../../WorkClass/CommonClass';\r\nimport Button from '../../Button/Button';\r\nimport { NavLink } from 'react-router-dom';\r\nconst CC = new CommonClass();\r\n\r\nexport default class RegistrationFrom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n        this.reg_pass = /(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*.-]{8,}/g;\r\n\r\n        this.handleClickRegistration = this.handleClickRegistration.bind(this);\r\n\r\n    }    \r\n\r\n    async handleClickRegistration(event) {\r\n        let flag_error = false;\r\n        let login = document.querySelector('.registration__form-cont .name__input').value,\r\n            email = document.querySelector('.registration__form-cont .email__input').value,\r\n            email_el = document.querySelector('.registration__form-cont .email__input'),\r\n            role = document.querySelector('.registration__form-cont .role__client-input').checked  ? 'client' : 'staff',\r\n            pass = document.querySelector('.registration__form-cont .registration__pass').value,\r\n            pass_repeat = document.querySelector('.registration__form-cont .registration__pass-repeat').value,\r\n            pass_el = document.querySelector('.registration__form-cont .registration__pass'),\r\n            pass_repeat_el = document.querySelector('.registration__form-cont .registration__pass-repeat');\r\n    // Проверка имени\r\n        if (login == '') {\r\n            flag_error = true;\r\n            CC.errorEl(document.querySelector('.registration__form-cont .name__input'));\r\n        }\r\n    // Проверка email       \r\n        if (CC.validateElEmail(email_el)) {\r\n            CC.errorEl(event.target);\r\n            CC.errorEl(email_el);\r\n            flag_error = true; \r\n        }    \r\n    // Проверка пароля   \r\n        if (CC.validatePass(pass_el, pass_repeat_el)) flag_error = true;\r\n\r\n        if (flag_error) return;\r\n\r\n        let bodyReq = {\r\n            login : login,\r\n            email: email, \r\n            role: role,\r\n            password: pass\r\n        };\r\n        const data = await CC.request('/api/registration', 'POST', bodyReq);\r\n        console.log(data);\r\n        if (data.success) {\r\n            console.log('Registration success');\r\n            document.querySelector('.registration__form.cont').style.display = 'none';\r\n            document.querySelector('.registration__form-cont .registration-success').style.display = 'block';\r\n            \r\n            setTimeout(() => {\r\n                // CC.backToEnter();\r\n                document.querySelector('.registration__form.cont').style.display = 'flex';\r\n                document.querySelector('.registration__form-cont .registration-success').style.display = 'none';\r\n            }, 2000);\r\n        } else {\r\n            console.log('This email is busy');\r\n            let er_el = email_el.closest('.cont').querySelector('.error_wrong-email');\r\n            er_el.textContent = 'Данный E-mail занят';\r\n            er_el.classList.add('active');\r\n            let promise = new Promise (resolve => { \r\n                setTimeout(() => {\r\n                    er_el.classList.remove('active');\r\n                    resolve();              \r\n                }, 1000);\r\n            });\r\n            promise.then(result => {\r\n                setTimeout(() => {\r\n                    er_el.textContent = 'Неверный E-mail'; \r\n                }, 500);                 \r\n            });\r\n            \r\n        }\r\n    }\r\n\r\n    stopPaste(event) {\r\n        if (event.code === 'KeyV' && event.ctrlKey) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"registration__form-cont\">                \r\n                <div className=\"registration__form cont\">\r\n                    <NavLink to=\"/entry\" className=\"back__btn\">Назад</NavLink>\r\n\r\n                    <div className=\"registration__name\">\r\n                        <p className=\"title\">Имя</p>\r\n                        <input type=\"text\" className=\"name__input input__field\"/>\r\n                    </div>\r\n                    <div className=\"registration__email\">\r\n                        <p className=\"title\">E-mail</p>\r\n                        <input type=\"text\" className=\"email__input input__field\"/>\r\n                    </div>\r\n                    <div className=\"error_wrong-email\">Неверный E-mail</div>\r\n                    <div className=\"registration__select-role\">\r\n                        <label  className=\"role__client-cont\">\r\n                            Клиент\r\n                            <input type=\"radio\" className=\"role__client-input\" name=\"role\" defaultChecked/>\r\n                        </label>\r\n                        <label  className=\"role__staff-cont\">\r\n                            Мастер\r\n                            <input type=\"radio\" className=\"role__staff-input\" name=\"role\"/>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"registration__pass-cont pass__cont\">\r\n                        <p className=\"pass__title title\">Придумайте пароль <span className=\"notice\"></span></p>\r\n                        <div className=\"pass__input-cont\">\r\n                            <input type=\"password\" className=\"registration__pass input__field\"\r\n                                    onInput = {CC.checkPassValid}\r\n                                    onKeyDown = {this.stopPaste}\r\n                                    />\r\n                            <label className=\"hide__pass\">\r\n                                <input type=\"checkbox\" className=\"hidden\" \r\n                                    onChange = {CC.changeCheckboxPass}\r\n                                    onKeyDown = {this.stopPaste}\r\n                                    />\r\n                                <span className=\"helper\"></span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <p className=\"pass__title-repeat title\">Повторите пароль</p>\r\n                        <div className=\"pass__input-cont\">\r\n                            <input type=\"password\" className=\"registration__pass-repeat input__field\"/>\r\n                            <label className=\"hide__pass\">\r\n                                <input type=\"checkbox\" className=\"hidden\" onChange = {CC.changeCheckboxPass}/>\r\n                                <span className=\"helper\"></span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <Button text=\"Зарегистрироваться\" type=\"registration__btn\" handler={this.handleClickRegistration}/>\r\n                </div> \r\n                <p className=\"registration-success\">Регистрация прошла успешно! <br/> На указанный e-mail отправлено письмо с интрукциями для активации аккаунта.</p>\r\n            </div>\r\n        )\r\n    }\r\n}","/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/Button/Button.jsx",["103"],"import React from 'react';\nimport s from './Button.module.css';\nimport { NavLink } from 'react-router-dom';\n\nlet Button = (props) => {\n    let hidden = props.hidden ? ' hidden ' : '',\n        err = props.err ? props.err : '';\n    function stopPaste(e) {\n        e.preventDefault();\n    }\n\n    if (props.type == 'login__btn') {\n        return (\n            <NavLink to='/entry' className={s[props.type] + ' default__btn ' + hidden} onMouseMove={stopPaste}>{props.text}</NavLink>\n        );\n    }\n    return (\n        <div className={s[props.type] + ' default__btn ' + hidden + err} \n            onClick={props.handler}\n            onMouseMove={stopPaste}>\n            {props.text}\n        </div>\n    )\n\n}\n\nexport default Button;","/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/PersonalArea/PersonalArea.js",["104","105","106","107","108"],"/home/xride/Рабочий стол/ProjectX/app-xyz/src/App.js",["109"],"/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/AppBar/AppBar.js",[],"/home/xride/Рабочий стол/ProjectX/app-xyz/src/WorkClass/CommonClass.js",["110"],"\r\nexport default class CommonClass {\r\n    constructor() {\r\n        this.reg_pass = /(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*.-]{8,}/g;\r\n\r\n        this.validatePass = this.validatePass.bind(this);\r\n        this.checkPassValid = this.checkPassValid.bind(this);\r\n    }\r\n    errorEl(el) {\r\n        el.classList.add('error');\r\n        setTimeout(() => {\r\n            el.classList.remove('error');\r\n        }, 1000);\r\n    }\r\n\r\n    validateEmail(email) {\r\n        let regexp = /[-.\\w]+@([\\w-]+\\.)+[\\w-]+/g;\r\n        \r\n        if (!email.match(regexp)) \r\n            return false;\r\n        \r\n        return true;\r\n    }\r\n\r\n    async request(url, method = 'GET', data = null) {\r\n        try {\r\n            const headers = {};\r\n            let body;\r\n            if (data) {\r\n                headers['Content-Type'] = 'application/json';\r\n                body = JSON.stringify(data);\r\n            }\r\n            const response = await fetch(url, {\r\n                method,\r\n                headers,\r\n                body\r\n            });\r\n            return response.json();\r\n        } catch (e) {\r\n            console.warn('Error ', e.message);\r\n        }\r\n    }\r\n\r\n    show (el) {\r\n        if (Array.isArray(el)) {\r\n            for (let item of el) {\r\n                item.style.display = 'block';\r\n            }\r\n        } else el.style.display = 'block';\r\n    }\r\n    hide (el) {\r\n        \r\n        if (Array.isArray(el)) {\r\n            for (let item of el) {\r\n                item.style.display = 'none';\r\n            }\r\n        } else el.style.display = 'none';\r\n    }\r\n    blurOn (el) {\r\n        if (Array.isArray(el)) {\r\n            for (let item of el) {\r\n                item.classList.add('blur');\r\n            }\r\n        } else el.classList.add('blur');\r\n    }\r\n    blurOff (el) {\r\n        if (Array.isArray(el)) {\r\n            for (let item of el) {\r\n                item.classList.remove('blur');\r\n            }\r\n        } else el.classList.remove('blur');\r\n    }\r\n\r\n    cleanEnterForm() {\r\n        let input_arr = document.querySelectorAll('.enter__form input');\r\n        for (let input of input_arr) {\r\n            input.value = '';\r\n        }\r\n    }\r\n\r\n    backToEnter() {\r\n        document.querySelector('.enter__form-container').style.display = 'flex';\r\n        document.querySelector('.registration__form-cont').style.display = \"none\"; \r\n        document.querySelector('.registration__form-cont .registration-success').style.display = 'none';\r\n        document.querySelector('.registration__form-cont .name__input').value = '';\r\n        document.querySelector('.registration__form-cont .email__input').value = '';\r\n        document.querySelector('.registration__form-cont .registration__pass').value = '';\r\n        document.querySelector('.registration__form-cont .registration__pass-repeat').value = '';\r\n        document.querySelector('.registration__form-cont .notice').textContent = '';\r\n        document.querySelector('.recovery-pass').style.display = \"none\";\r\n        document.querySelector('.recovery-pass [type=\"email\"].input__field').value = '';\r\n    }\r\n\r\n    validatePass(pass_el, pass_repeat_el) {\r\n        let pass = pass_el.value, \r\n            pass_repeat = pass_repeat_el.value;\r\n        \r\n        if (pass === '' || pass_repeat === '') {\r\n            \r\n            if (pass === '')  this.errorEl(pass_el);\r\n            if (pass_repeat === '')  this.errorEl(pass_repeat_el);\r\n            return true;\r\n\r\n        } else if (!pass.match(this.reg_pass)) {\r\n\r\n            this.errorEl(pass_el);\r\n            return true;\r\n\r\n        } else if (pass !== pass_repeat) {\r\n\r\n            this.errorEl(pass_el);\r\n            this.errorEl(pass_repeat_el);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    changeCheckboxPass(event) {\r\n        console.log(event.target.checked);\r\n        let type = event.target.checked ? 'text' : 'password';\r\n        event.target.closest('.pass__input-cont').querySelector('.input__field').type = type;\r\n    }\r\n\r\n    // checkPassValid(event) {\r\n        \r\n    //     let val = event.target.value,\r\n    //         notice = event.target.closest('.pass__cont').querySelector('.notice');\r\n    //     if (val == '') notice.textContent = '';\r\n    //     else if (val.match(this.reg_pass)) {\r\n    //         notice.textContent = 'Надёжный пароль';\r\n    //         notice.style.color = \"green\";\r\n    //     } else {\r\n    //         notice.textContent = 'Небезопасный пароль';\r\n    //         notice.style.color = \"red\";\r\n    //     }\r\n    // }\r\n    checkPassValid(val) {\r\n        let res = {\r\n            notice_class: '',\r\n            notice_text: '',\r\n            valid_pass: false\r\n        };\r\n        if (val == '') {\r\n            res.notice_class = '';\r\n            res.notice_text = '';\r\n            res.valid_pass = true;\r\n        } else if (val.match(this.reg_pass)) {\r\n            res.notice_class = ' valid ';\r\n            res.notice_text = 'Надёжный пароль';\r\n            res.valid_pass = true;\r\n        } else {\r\n            res.notice_class = ' novalid ';\r\n            res.notice_text = 'Небезопасный пароль';\r\n            res.valid_pass = false;\r\n        }\r\n        return res;\r\n    }\r\n}","/home/xride/Рабочий стол/ProjectX/app-xyz/src/redux/actions/personalAreaActions.js",[],["111","112"],"/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/EnterForm/ForgotPass/ForgotPass.js",[],"/home/xride/Рабочий стол/ProjectX/app-xyz/src/redux/store.js",[],["113","114"],"/home/xride/Рабочий стол/ProjectX/app-xyz/src/redux/reducers/enterFormReducer.js",["115","116","117","118","119","120"],"import CommonClass from './../../WorkClass/CommonClass';\nimport store from '../store';\n\nconst CC = new CommonClass();\n\n\nconst OPEN_ENTER_FORM = 'OPEN_ENTER_FORM';\nconst CLOSE_ENTER_FORM = 'CLOSE_ENTER_FORM';\nconst CHANGE_ENTER_FORM_EMAIL = 'CHANGE_ENTER_FORM_EMAIL';\nconst CHANGE_ENTER_FORM_PASS = 'CHANGE_ENTER_FORM_PASS';\nconst SEND_ENTER_FORM_START = 'SEND_ENTER_FORM_START';\nconst SEND_ENTER_FORM_END = 'SEND_ENTER_FORM_END';\n\nlet  initialState = {\n    visible: false,\n    email: '',\n    password: '',\n    loader: false,\n    success_auth: false,\n    error_auth: false,\n};\n\nconst enterFormReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case OPEN_ENTER_FORM:\n            state.visible = true;\n            return state;\n        case CLOSE_ENTER_FORM:\n            state.visible = false;\n            state.login = '';\n            state.password = '';\n            action.history.replace('/');\n            return state;\n        case CHANGE_ENTER_FORM_EMAIL:\n            state.email = action.newData;\n            return state;\n        case CHANGE_ENTER_FORM_PASS:\n            state.password = action.newData;\n            return state;\n        case SEND_ENTER_FORM_START:\n            state.loader = true;\n            return state;\n        case SEND_ENTER_FORM_END:\n            state.loader = false;\n            let resp = action.resp;\n            if (resp.success) {\n                if (action.stage == 1)\n                    state.success_auth = true;\n                else if (action.stage == 2) {\n                    action.history.replace('/');\n                    state.visible = false;\n                    state.success_auth = false;\n                    state.password = '';\n                    state.email = '';\n                }\n            } else {\n                if (action.stage == 1)\n                    state.error_auth = true;\n                else if (action.stage == 2)\n                    state.error_auth = false;\n            }\n            return state;\n        default:\n            return state;\n    }\n};\n\nexport default enterFormReducer;\n\n",{"ruleId":"121","severity":1,"message":"122","line":5,"column":10,"nodeType":"123","messageId":"124","endLine":5,"endColumn":14},{"ruleId":"121","severity":1,"message":"125","line":8,"column":7,"nodeType":"123","messageId":"124","endLine":8,"endColumn":9},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"121","severity":1,"message":"130","line":5,"column":19,"nodeType":"123","messageId":"124","endLine":5,"endColumn":30},{"ruleId":"131","severity":1,"message":"132","line":80,"column":19,"nodeType":"133","messageId":"134","endLine":80,"endColumn":21},{"ruleId":"126","replacedBy":"135"},{"ruleId":"128","replacedBy":"136"},{"ruleId":"131","severity":1,"message":"132","line":68,"column":30,"nodeType":"133","messageId":"134","endLine":68,"endColumn":32},{"ruleId":"131","severity":1,"message":"132","line":70,"column":35,"nodeType":"133","messageId":"134","endLine":70,"endColumn":37},{"ruleId":"131","severity":1,"message":"132","line":90,"column":30,"nodeType":"133","messageId":"134","endLine":90,"endColumn":32},{"ruleId":"131","severity":1,"message":"132","line":97,"column":30,"nodeType":"133","messageId":"134","endLine":97,"endColumn":32},{"ruleId":"131","severity":1,"message":"137","line":101,"column":65,"nodeType":"133","messageId":"134","endLine":101,"endColumn":67},{"ruleId":"131","severity":1,"message":"137","line":102,"column":67,"nodeType":"133","messageId":"134","endLine":102,"endColumn":69},{"ruleId":"131","severity":1,"message":"132","line":104,"column":38,"nodeType":"133","messageId":"134","endLine":104,"endColumn":40},{"ruleId":"131","severity":1,"message":"132","line":104,"column":71,"nodeType":"133","messageId":"134","endLine":104,"endColumn":73},{"ruleId":"131","severity":1,"message":"132","line":118,"column":30,"nodeType":"133","messageId":"134","endLine":118,"endColumn":32},{"ruleId":"131","severity":1,"message":"132","line":128,"column":37,"nodeType":"133","messageId":"134","endLine":128,"endColumn":39},{"ruleId":"131","severity":1,"message":"132","line":136,"column":30,"nodeType":"133","messageId":"134","endLine":136,"endColumn":32},{"ruleId":"131","severity":1,"message":"132","line":139,"column":37,"nodeType":"133","messageId":"134","endLine":139,"endColumn":39},{"ruleId":"131","severity":1,"message":"132","line":145,"column":30,"nodeType":"133","messageId":"134","endLine":145,"endColumn":32},{"ruleId":"131","severity":1,"message":"132","line":149,"column":37,"nodeType":"133","messageId":"134","endLine":149,"endColumn":39},{"ruleId":"131","severity":1,"message":"132","line":151,"column":37,"nodeType":"133","messageId":"134","endLine":151,"endColumn":39},{"ruleId":"121","severity":1,"message":"138","line":27,"column":13,"nodeType":"123","messageId":"124","endLine":27,"endColumn":24},{"ruleId":"131","severity":1,"message":"132","line":31,"column":19,"nodeType":"133","messageId":"134","endLine":31,"endColumn":21},{"ruleId":"131","severity":1,"message":"132","line":12,"column":20,"nodeType":"133","messageId":"134","endLine":12,"endColumn":22},{"ruleId":"131","severity":1,"message":"137","line":35,"column":19,"nodeType":"133","messageId":"134","endLine":35,"endColumn":21},{"ruleId":"131","severity":1,"message":"132","line":60,"column":33,"nodeType":"133","messageId":"134","endLine":60,"endColumn":35},{"ruleId":"131","severity":1,"message":"132","line":73,"column":40,"nodeType":"133","messageId":"134","endLine":73,"endColumn":42},{"ruleId":"131","severity":1,"message":"132","line":78,"column":40,"nodeType":"133","messageId":"134","endLine":78,"endColumn":42},{"ruleId":"131","severity":1,"message":"132","line":97,"column":50,"nodeType":"133","messageId":"134","endLine":97,"endColumn":52},{"ruleId":"131","severity":1,"message":"132","line":26,"column":12,"nodeType":"133","messageId":"134","endLine":26,"endColumn":14},{"ruleId":"131","severity":1,"message":"132","line":144,"column":17,"nodeType":"133","messageId":"134","endLine":144,"endColumn":19},{"ruleId":"126","replacedBy":"139"},{"ruleId":"128","replacedBy":"140"},{"ruleId":"126","replacedBy":"141"},{"ruleId":"128","replacedBy":"142"},{"ruleId":"121","severity":1,"message":"143","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":13},{"ruleId":"121","severity":1,"message":"125","line":4,"column":7,"nodeType":"123","messageId":"124","endLine":4,"endColumn":9},{"ruleId":"131","severity":1,"message":"132","line":47,"column":34,"nodeType":"133","messageId":"134","endLine":47,"endColumn":36},{"ruleId":"131","severity":1,"message":"132","line":49,"column":39,"nodeType":"133","messageId":"134","endLine":49,"endColumn":41},{"ruleId":"131","severity":1,"message":"132","line":57,"column":34,"nodeType":"133","messageId":"134","endLine":57,"endColumn":36},{"ruleId":"131","severity":1,"message":"132","line":59,"column":39,"nodeType":"133","messageId":"134","endLine":59,"endColumn":41},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'CC' is assigned a value but never used.","no-native-reassign",["144"],"no-negated-in-lhs",["145"],"'useLocation' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["144"],["145"],"Expected '!==' and instead saw '!='.","'pass_repeat' is assigned a value but never used.",["144"],["145"],["144"],["145"],"'store' is defined but never used.","no-global-assign","no-unsafe-negation"]