[{"/home/xride/Рабочий стол/ProjectX/app-xyz/src/App.js":"1","/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/AppBar/AppBar.js":"2","/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/EnterForm/RegistrationForm/RegistrationFrom.js":"3","/home/xride/Рабочий стол/ProjectX/app-xyz/src/reportWebVitals.js":"4","/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/EnterForm/EnterForm.js":"5","/home/xride/Рабочий стол/ProjectX/app-xyz/src/WorkClass/CommonClass.js":"6","/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/PersonalArea/PersonalArea.js":"7","/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/EnterForm/ForgotPass/ForgotPass.js":"8","/home/xride/Рабочий стол/ProjectX/app-xyz/src/index.js":"9","/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/AppBar/AppBarNav/AppBarNav.js":"10"},{"size":539,"mtime":1614514071481,"results":"11","hashOfConfig":"12"},{"size":2332,"mtime":1615995730452,"results":"13","hashOfConfig":"12"},{"size":7251,"mtime":1616066501058,"results":"14","hashOfConfig":"12"},{"size":362,"mtime":1605368314749,"results":"15","hashOfConfig":"12"},{"size":6464,"mtime":1616069261066,"results":"16","hashOfConfig":"12"},{"size":4798,"mtime":1616062944019,"results":"17","hashOfConfig":"12"},{"size":9608,"mtime":1616078642621,"results":"18","hashOfConfig":"12"},{"size":3642,"mtime":1613979737613,"results":"19","hashOfConfig":"12"},{"size":500,"mtime":1605368314749,"results":"20","hashOfConfig":"12"},{"size":275,"mtime":1613821181959,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u4xr5r",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/xride/Рабочий стол/ProjectX/app-xyz/src/App.js",[],"/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/AppBar/AppBar.js",[],"/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/EnterForm/RegistrationForm/RegistrationFrom.js",["45","46"],"import React, { Component } from 'react';\r\nimport './RegistrationFromStyle.css';\r\nimport CommonClass from '../../../WorkClass/CommonClass';\r\nconst CC = new CommonClass();\r\n\r\nexport default class RegistrationFrom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n        this.reg_pass = /(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*.-]{8,}/g;\r\n\r\n        this.handleClickRegistration = this.handleClickRegistration.bind(this);\r\n\r\n    }    \r\n\r\n    async handleClickRegistration(event) {\r\n        let flag_error = false;\r\n        let login = document.querySelector('.registration__form-cont .name__input').value,\r\n            email = document.querySelector('.registration__form-cont .email__input').value,\r\n            email_el = document.querySelector('.registration__form-cont .email__input'),\r\n            role = document.querySelector('.registration__form-cont .role__client-input').checked  ? 'client' : 'staff',\r\n            pass = document.querySelector('.registration__form-cont .registration__pass').value,\r\n            pass_repeat = document.querySelector('.registration__form-cont .registration__pass-repeat').value,\r\n            pass_el = document.querySelector('.registration__form-cont .registration__pass'),\r\n            pass_repeat_el = document.querySelector('.registration__form-cont .registration__pass-repeat');\r\n    // Проверка имени\r\n        if (login == '') {\r\n            flag_error = true;\r\n            CC.errorEl(document.querySelector('.registration__form-cont .name__input'));\r\n        }\r\n    // Проверка email       \r\n        if (CC.validateElEmail(email_el)) {\r\n            CC.errorEl(event.target);\r\n            CC.errorEl(email_el);\r\n            flag_error = true; \r\n        }    \r\n    // Проверка пароля   \r\n        if (CC.validatePass(pass_el, pass_repeat_el)) flag_error = true;\r\n\r\n        if (flag_error) return;\r\n\r\n        let bodyReq = {\r\n            login : login,\r\n            email: email, \r\n            role: role,\r\n            password: pass\r\n        };\r\n        const data = await CC.request('/api/registration', 'POST', bodyReq);\r\n        console.log(data);\r\n        if (data.success) {\r\n            console.log('Registration success');\r\n            document.querySelector('.registration__form.cont').style.display = 'none';\r\n            document.querySelector('.registration__form-cont .registration-success').style.display = 'block';\r\n            \r\n            setTimeout(() => {\r\n                CC.backToEnter();\r\n                document.querySelector('.registration__form.cont').style.display = 'flex';\r\n                document.querySelector('.registration__form-cont .registration-success').style.display = 'none';\r\n            }, 2000);\r\n        } else {\r\n            console.log('This email is busy');\r\n            let er_el = email_el.closest('.cont').querySelector('.error_wrong-email');\r\n            er_el.textContent = 'Данный E-mail занят';\r\n            er_el.classList.add('active');\r\n            let promise = new Promise (resolve => { \r\n                setTimeout(() => {\r\n                    er_el.classList.remove('active');\r\n                    resolve();              \r\n                }, 1000);\r\n            });\r\n            promise.then(result => {\r\n                setTimeout(() => {\r\n                    er_el.textContent = 'Неверный E-mail'; \r\n                }, 500);                 \r\n            });\r\n            \r\n        }\r\n    }\r\n\r\n    stopPaste(event) {\r\n        if (event.code === 'KeyV' && event.ctrlKey) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"registration__form-cont\">                \r\n                <div className=\"registration__form cont\">\r\n                    <div className=\"back__btn\"\r\n                        onClick = {CC.backToEnter}>\r\n                        Назад\r\n                    </div>\r\n                    <div className=\"registration__name\">\r\n                        <p className=\"title\">Имя</p>\r\n                        <input type=\"text\" className=\"name__input input__field\"/>\r\n                    </div>\r\n                    <div className=\"registration__email\">\r\n                        <p className=\"title\">E-mail</p>\r\n                        <input type=\"text\" className=\"email__input input__field\"/>\r\n                    </div>\r\n                    <div className=\"error_wrong-email\">Неверный E-mail</div>\r\n                    <div className=\"registration__select-role\">\r\n                        <label  className=\"role__client-cont\">\r\n                            Клиент\r\n                            <input type=\"radio\" className=\"role__client-input\" name=\"role\" defaultChecked/>\r\n                        </label>\r\n                        <label  className=\"role__staff-cont\">\r\n                            Мастер\r\n                            <input type=\"radio\" className=\"role__staff-input\" name=\"role\"/>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"registration__pass-cont pass__cont\">\r\n                        <p className=\"pass__title title\">Придумайте пароль <span className=\"notice\"></span></p>\r\n                        <div className=\"pass__input-cont\">\r\n                            <input type=\"password\" className=\"registration__pass input__field\"\r\n                                    onInput = {CC.checkPassValid}\r\n                                    onKeyDown = {this.stopPaste}\r\n                                    />\r\n                            <label className=\"hide__pass\">\r\n                                <input type=\"checkbox\" className=\"hidden\" \r\n                                    onChange = {CC.changeCheckboxPass}\r\n                                    onKeyDown = {this.stopPaste}\r\n                                    />\r\n                                <span className=\"helper\"></span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <p className=\"pass__title-repeat title\">Повторите пароль</p>\r\n                        <div className=\"pass__input-cont\">\r\n                            <input type=\"password\" className=\"registration__pass-repeat input__field\"/>\r\n                            <label className=\"hide__pass\">\r\n                                <input type=\"checkbox\" className=\"hidden\" onChange = {CC.changeCheckboxPass}/>\r\n                                <span className=\"helper\"></span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"registration__btn default__btn\"\r\n                        onClick = {this.handleClickRegistration}>\r\n                        Зарегистрироваться\r\n                    </div>\r\n                </div> \r\n                <p className=\"registration-success\">Регистрация прошла успешно! <br/> На указанный e-mail отправлено письмо с интрукциями для активации аккаунта.</p>\r\n            </div>\r\n        )\r\n    }\r\n}","/home/xride/Рабочий стол/ProjectX/app-xyz/src/reportWebVitals.js",[],"/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/EnterForm/EnterForm.js",["47"],"import React, { Component } from 'react';\r\nimport ForgotPass from './ForgotPass/ForgotPass';\r\nimport RegistrationFrom from './RegistrationForm/RegistrationFrom';\r\nimport './enterFromStyle.css';\r\nimport CommonClass from '../../WorkClass/CommonClass';\r\nconst CC = new CommonClass();\r\n\r\nexport default class EnterForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email : '',\r\n            password : '',\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let form = this;\r\n        document.querySelector('.enter__wrap').addEventListener('mousedown', function(e) {\r\n            if (!e.target.closest('.enter__form')) {\r\n                CC.hide(document.querySelector('.enter__wrap'));\r\n                CC.blurOff(document.querySelector('.App .wrapper'));\r\n                CC.cleanEnterForm();\r\n                CC.backToEnter();\r\n                form.setState({\r\n                    email : '',\r\n                    password : ''                    \r\n                });\r\n            }\r\n        });\r\n        document.querySelector('.auth__block .login__btn').addEventListener('mousemove', function(e) {\r\n            e.preventDefault();\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({[event.target.dataset.id] : event.target.value});\r\n    }\r\n\r\n    async handleClick(event) {\r\n        console.log(this.state);\r\n        \r\n        const resp = await CC.request('/api/auth', 'POST', this.state);\r\n        console.log(resp);\r\n        if (resp.success) {\r\n            document.querySelector('.enter__form-container').style.display = \"none\";\r\n            document.querySelector('.enter__form .success__auth').style.display = \"block\";\r\n            setTimeout(() => {\r\n                let enter_wrap = document.querySelector('.enter__wrap'),\r\n                    auth_block = document.querySelector('.auth__block');\r\n                document.querySelector('.auth__block .name').textContent = resp.data.login;\r\n                document.querySelector('.auth__block').dataset.value = JSON.stringify(resp.data);\r\n                document.querySelector('.personal__wrap .change__data').value = JSON.stringify(resp.data);\r\n                document.querySelector('.personal__wrap .change__data').dataset.prevValue = JSON.stringify(resp.data);\r\n                document.querySelector('.personal__wrap .change__data').dispatchEvent(new InputEvent('change'));\r\n                CC.hide(auth_block.querySelector('.login__btn'));\r\n                CC.hide(enter_wrap);\r\n                auth_block.querySelector('.auth__block-info').classList.remove('hidden');\r\n                CC.blurOff(document.querySelector('.App .wrapper'));\r\n                document.querySelector('.enter__form-container').style.display = \"flex\";\r\n                document.querySelector('.enter__form .success__auth').style.display = \"none\";\r\n                CC.cleanEnterForm();\r\n                this.setState({\r\n                    email : '',\r\n                    password : ''\r\n                });\r\n                auth_block.querySelector('.p-area__btn').classList.remove('hidden');\r\n            }, 1500);\r\n        } else {\r\n            document.querySelector('.enter__form .error__auth').style.opacity = \"1\";\r\n            CC.errorEl(document.querySelector('.enter__form-container .enter__email input'));\r\n            CC.errorEl(document.querySelector('.enter__form-container .enter__password input'));\r\n            CC.errorEl(document.querySelector('.enter__form-container .enter__btn'));\r\n            setTimeout(() => {\r\n                document.querySelector('.enter__form .error__auth').style.opacity = \"0\";\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    showNextForm(event) {\r\n        document.querySelector('.' + event.target.dataset.nextClass).style.display = 'block';\r\n        document.querySelector('.enter__form-container').style.display = \"none\";\r\n    }\r\n\r\n    sendEnter(e) {\r\n        \r\n        if (e.key == 'Enter') {\r\n            console.log(e.key);\r\n            document.querySelector('.enter__form-container .enter__btn').click();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <form className=\"enter__form\">\r\n                    <div className=\"success__auth\">Вы вошли!</div>\r\n                    <div className=\"enter__form-container\"\r\n                        onKeyDown={this.sendEnter}>\r\n                        <div className=\"error__auth\">Неверный E-mail или пароль</div>                        \r\n                        <div className=\"enter__email\">\r\n                            <label>E-mail:</label>\r\n                            <input type=\"text\" data-id=\"email\" className=\"input__field\"\r\n                                value={this.state.email}\r\n                                onChange = {this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"enter__password\">\r\n                            <label>Пароль:</label>\r\n                            <input type=\"password\" data-id=\"password\" name=\"password\" className=\"input__field\"\r\n                                value={this.state.password}\r\n                                onChange = {this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"enter__btn default__btn\"\r\n                        onClick = {this.handleClick}>\r\n                            Войти\r\n                        </div>\r\n                        <div className = \"enter__other\">\r\n                            <div className = \"other__registration\"\r\n                                onClick = {this.showNextForm} \r\n                                data-next-class = \"registration__form-cont\">Регистрация</div>\r\n                            <div className = \"other__forgot-pass\"\r\n                                onClick = {this.showNextForm}\r\n                                data-next-class = \"recovery-pass\">Забыли пароль?</div>\r\n                        </div>\r\n                    </div>  \r\n                    <ForgotPass mainClass='enter__form-container'/>\r\n                    <RegistrationFrom mainClass='enter__form-container'/>\r\n                </form>\r\n        )\r\n    }\r\n}","/home/xride/Рабочий стол/ProjectX/app-xyz/src/WorkClass/CommonClass.js",["48"],"\r\nexport default class CommonClass {\r\n    constructor() {\r\n        this.reg_pass = /(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*.-]{8,}/g;\r\n\r\n        this.validatePass = this.validatePass.bind(this);\r\n        this.checkPassValid = this.checkPassValid.bind(this);\r\n    }\r\n    errorEl(el) {\r\n        el.classList.add('error');\r\n        setTimeout(() => {\r\n            el.classList.remove('error');\r\n        }, 1000);\r\n    }\r\n\r\n    validateElEmail(el) {\r\n        let email = el.value,\r\n            regexp = /[-.\\w]+@([\\w-]+\\.)+[\\w-]+/g;\r\n        \r\n        if (!email.match(regexp)) {\r\n            el.closest('.cont').querySelector('.error_wrong-email').classList.add('active');\r\n            setTimeout(() => {\r\n                el.closest('.cont').querySelector('.error_wrong-email').classList.remove('active');\r\n            }, 1000);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async request(url, method = 'GET', data = null) {\r\n        try {\r\n            const headers = {};\r\n            let body;\r\n            if (data) {\r\n                headers['Content-Type'] = 'application/json';\r\n                body = JSON.stringify(data);\r\n            }\r\n            const response = await fetch(url, {\r\n                method,\r\n                headers,\r\n                body\r\n            });\r\n            return response.json();\r\n        } catch (e) {\r\n            console.warn('Error ', e.message);\r\n        }\r\n    }\r\n\r\n    show (el) {\r\n        if (Array.isArray(el)) {\r\n            for (let item of el) {\r\n                item.style.display = 'block';\r\n            }\r\n        } else el.style.display = 'block';\r\n    }\r\n    hide (el) {\r\n        \r\n        if (Array.isArray(el)) {\r\n            for (let item of el) {\r\n                item.style.display = 'none';\r\n            }\r\n        } else el.style.display = 'none';\r\n    }\r\n    blurOn (el) {\r\n        if (Array.isArray(el)) {\r\n            for (let item of el) {\r\n                item.classList.add('blur');\r\n            }\r\n        } else el.classList.add('blur');\r\n    }\r\n    blurOff (el) {\r\n        if (Array.isArray(el)) {\r\n            for (let item of el) {\r\n                item.classList.remove('blur');\r\n            }\r\n        } else el.classList.remove('blur');\r\n    }\r\n\r\n    cleanEnterForm() {\r\n        let input_arr = document.querySelectorAll('.enter__form input');\r\n        for (let input of input_arr) {\r\n            input.value = '';\r\n        }\r\n    }\r\n\r\n    backToEnter() {\r\n        document.querySelector('.enter__form-container').style.display = 'flex';\r\n        document.querySelector('.registration__form-cont').style.display = \"none\"; \r\n        document.querySelector('.registration__form-cont .registration-success').style.display = 'none';\r\n        document.querySelector('.registration__form-cont .name__input').value = '';\r\n        document.querySelector('.registration__form-cont .email__input').value = '';\r\n        document.querySelector('.registration__form-cont .registration__pass').value = '';\r\n        document.querySelector('.registration__form-cont .registration__pass-repeat').value = '';\r\n        document.querySelector('.registration__form-cont .notice').textContent = '';\r\n        document.querySelector('.recovery-pass').style.display = \"none\";\r\n        document.querySelector('.recovery-pass [type=\"email\"].input__field').value = '';\r\n    }\r\n\r\n    validatePass(pass_el, pass_repeat_el) {\r\n        let pass = pass_el.value, \r\n            pass_repeat = pass_repeat_el.value;\r\n        \r\n        if (pass === '' || pass_repeat === '') {\r\n            \r\n            if (pass === '')  this.errorEl(pass_el);\r\n            if (pass_repeat === '')  this.errorEl(pass_repeat_el);\r\n            return true;\r\n\r\n        } else if (!pass.match(this.reg_pass)) {\r\n\r\n            this.errorEl(pass_el);\r\n            return true;\r\n\r\n        } else if (pass !== pass_repeat) {\r\n\r\n            this.errorEl(pass_el);\r\n            this.errorEl(pass_repeat_el);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    changeCheckboxPass(event) {\r\n        console.log(event.target.checked);\r\n        let type = event.target.checked ? 'text' : 'password';\r\n        event.target.closest('.pass__input-cont').querySelector('.input__field').type = type;\r\n    }\r\n\r\n    checkPassValid(event) {\r\n        \r\n        let val = event.target.value,\r\n            notice = event.target.closest('.pass__cont').querySelector('.notice');\r\n        if (val == '') notice.textContent = '';\r\n        else if (val.match(this.reg_pass)) {\r\n            notice.textContent = 'Надёжный пароль';\r\n            notice.style.color = \"green\";\r\n        } else {\r\n            notice.textContent = 'Небезопасный пароль';\r\n            notice.style.color = \"red\";\r\n        }\r\n    }\r\n}","/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/PersonalArea/PersonalArea.js",["49","50","51","52","53","54","55","56"],"/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/EnterForm/ForgotPass/ForgotPass.js",[],"/home/xride/Рабочий стол/ProjectX/app-xyz/src/index.js",[],"/home/xride/Рабочий стол/ProjectX/app-xyz/src/Components/AppBar/AppBarNav/AppBarNav.js",[],{"ruleId":"57","severity":1,"message":"58","line":25,"column":13,"nodeType":"59","messageId":"60","endLine":25,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":29,"column":19,"nodeType":"63","messageId":"64","endLine":29,"endColumn":21},{"ruleId":"61","severity":1,"message":"62","line":91,"column":19,"nodeType":"63","messageId":"64","endLine":91,"endColumn":21},{"ruleId":"61","severity":1,"message":"62","line":134,"column":17,"nodeType":"63","messageId":"64","endLine":134,"endColumn":19},{"ruleId":"61","severity":1,"message":"65","line":36,"column":22,"nodeType":"63","messageId":"64","endLine":36,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":66,"column":71,"nodeType":"63","messageId":"64","endLine":66,"endColumn":73},{"ruleId":"61","severity":1,"message":"62","line":66,"column":109,"nodeType":"63","messageId":"64","endLine":66,"endColumn":111},{"ruleId":"61","severity":1,"message":"65","line":68,"column":28,"nodeType":"63","messageId":"64","endLine":68,"endColumn":30},{"ruleId":"61","severity":1,"message":"65","line":68,"column":60,"nodeType":"63","messageId":"64","endLine":68,"endColumn":62},{"ruleId":"61","severity":1,"message":"65","line":96,"column":28,"nodeType":"63","messageId":"64","endLine":96,"endColumn":30},{"ruleId":"61","severity":1,"message":"62","line":125,"column":33,"nodeType":"63","messageId":"64","endLine":125,"endColumn":35},{"ruleId":"61","severity":1,"message":"62","line":140,"column":40,"nodeType":"63","messageId":"64","endLine":140,"endColumn":42},"no-unused-vars","'pass_repeat' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='."]